parser: '@typescript-eslint/parser'
parserOptions:
  tsconfigRootDir: ./
  sourceType: module
settings:
  'import/resolver':
    typescript:
      alwaysTryTypes: true
env:
  node: true
  jest: true
plugins:
  - prettier
  - import
  - '@typescript-eslint'
extends:
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended
  - plugin:import/typescript
  - prettier
  - prettier/@typescript-eslint
  - plugin:prettier/recommended
rules:
  yoda: [error, always, { onlyEquality: true, exceptRange: true }]
  complexity: [error, 10]
  import/order: error
  '@typescript-eslint/no-use-before-define': [error, {
    functions: false,
    classes: false,
    variables: false,
  }]
  '@typescript-eslint/explicit-module-boundary-types': off
  '@typescript-eslint/member-delimiter-style': off
  '@typescript-eslint/no-explicit-any': [warn, { fixToUnknown: true }]
  '@typescript-eslint/no-var-requires': off
  '@typescript-eslint/no-extra-semi': off
  '@typescript-eslint/no-unused-vars': [warn, {
    varsIgnorePattern: '^_',
    argsIgnorePattern: '^_',
    caughtErrorsIgnorePattern: '^_',
    ignoreRestSiblings: true,
  }]
overrides:
  - files: ['*.tsx']
    rules:
      '@typescript-eslint/no-unused-vars': off
  - files: ['*.ts', '*.tsx']
    rules:
      '@typescript-eslint/no-var-requires': error
